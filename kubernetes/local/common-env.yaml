kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: Service
metadata:
  name: ${APPLICATION_API_SERVICE_NAME}
  namespace: ${PROJECT_NAMESPACE}
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: ${APPLICATION_API_NAME}
  selector:
    app: ${PROJECT_NAME}
    env: ${APPLICATION_API_ENVIRONMENT}
    type: api
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: ${APPLICATION_VIEW_SERVICE_NAME}
  namespace: ${PROJECT_NAMESPACE}
spec:
  ports:
    - port: 80
      targetPort: 80
      name: ${APPLICATION_VIEW_NAME}
  selector:
    app: ${PROJECT_NAME}
    env: ${APPLICATION_VIEW_ENVIRONMENT}
    type: view
  type: ClusterIP
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: ${APPLICATION_NAME}
  namespace: ${PROJECT_NAMESPACE}
  annotations:
    nginx.org/websocket-services: ${APPLICATION_API_SERVICE_NAME}
  labels:
    app: ${PROJECT_NAME}
    env: ${APPLICATION_ENVIRONMENT}
spec:
  rules:
    - host: ${APPLICATION_URL}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ${APPLICATION_VIEW_SERVICE_NAME}
                port:
                  number: 80
          - path: /api/
            pathType: Prefix
            backend:
              service:
                name: ${APPLICATION_API_SERVICE_NAME}
                port:
                  number: 8080
