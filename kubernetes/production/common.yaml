apiVersion: v1
kind: Service
metadata:
  name: ${APPLICATION_API_SERVICE_NAME}
  namespace: ${APPLICATION_NAMESPACE}
spec:
  ports:
    - port: 8080
      targetPort: 8080
      name: ${APPLICATION_API_NAME}
  selector:
    app: ${PROJECT_NAME}
    env: ${APPLICATION_API_ENVIRONMENT}
    type: api
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: ${APPLICATION_VIEW_SERVICE_NAME}
  namespace: ${APPLICATION_NAMESPACE}
spec:
  ports:
    - port: 80
      targetPort: 80
      name: ${APPLICATION_VIEW_NAME}
  selector:
    app: ${PROJECT_NAME}
    env: ${APPLICATION_VIEW_ENVIRONMENT}
    type: view
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APPLICATION_VIEW_DEPLOYMENT_NAME}
  namespace: ${APPLICATION_NAMESPACE}
  annotations:
    kubernetes.io/change-cause: "${APPLICATION_CHANGE_CAUSE}"
    bellsoft.net/application: ${PROJECT_NAME}
    bellsoft.net/environment: ${APPLICATION_VIEW_ENVIRONMENT}
  labels:
    app: ${PROJECT_NAME}
    env: ${APPLICATION_VIEW_ENVIRONMENT}
    type: view
spec:
  replicas: ${APPLICATION_REPLICAS}
  selector:
    matchLabels:
      app: ${PROJECT_NAME}
      env: ${APPLICATION_VIEW_ENVIRONMENT}
      type: view
  template:
    metadata:
      labels:
        app: ${PROJECT_NAME}
        env: ${APPLICATION_VIEW_ENVIRONMENT}
        type: view
      annotations:
        bellsoft.net/application: ${PROJECT_NAME}
        bellsoft.net/environment: ${APPLICATION_VIEW_ENVIRONMENT}
    spec:
      containers:
        - name: ${APPLICATION_VIEW_NAME}
          image: ${APPLICATION_IMAGE_URL}
          ports:
            - containerPort: 80
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: ${APPLICATION_NAME}
  namespace: ${APPLICATION_NAMESPACE}
  annotations:
    nginx.org/websocket-services: "${APPLICATION_API_SERVICE_NAME}"
  labels:
    app: ${PROJECT_NAME}
    env: ${APPLICATION_ENVIRONMENT}
spec:
  tls:
    - hosts:
        - ${APPLICATION_URL}
      secretName: ${APPLICATION_TLS_SECRET_NAME}
  rules:
    - host: ${APPLICATION_URL}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ${APPLICATION_VIEW_SERVICE_NAME}
                port:
                  number: 80
          - path: /api/
            pathType: Prefix
            backend:
              service:
                name: ${APPLICATION_API_SERVICE_NAME}
                port:
                  number: 8080
  ingressClassName: public
